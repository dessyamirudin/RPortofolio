library(lattice)
package ? lattice
library (help - package)
library (help-package)
library (help-lattice)
library (help - lattice)
library(help - lattice)
? environmental
head(environmental)
xyplot(ozone - radiation, data - environmental)
xyplot(ozone ~ radiation, data ~ environmental)
xyplot(ozone ~ radiation, data - environmental)
xyplot(ozone ~ radiation, data = environmental)
temp.cut
temp.cut
tempcut<-equal.count(environmental$temperature,4)
tempcut
xyplot(ozone~radiation|tempcut,data=environmental)
library(nlme)
library(lattice)
xyplot(weight~Time|Diet,bodyweight)
library(nlme)
library(lattice)
xyplot(weight~Time|Diet,Bodyweight)
xyplot(weight~Time|Diet=Bodyweight)
library(nlme)
library(lattice)
xyplot(weight~Time|Diet=Bodyweight)
xyplot(weight~Time|Diet, Bodyweight)
xyplot(weight~Time|Diet)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
########################################################################################################
######################################## Start #########################################################
########################################################################################################
library(plm)
library(plyr)
library(hydroGOF)
library(zoo)
library(data.table)
library(psych)
library(boot)
library(pastecs)
#library(lme4)
library(hts)
library(nlme)
require(useful)
# 'nrows' is set to 500 for test runs. It must be deleted for a full run
data_orig <- fread("icc_WRDS_wide.csv", header=TRUE, nrows=500)
setwd("C:\Users\TOSHIBA\Documents\RWorkingDir\Titanic")
setwd("C:/Users/TOSHIBA/Documents/RWorkingDir/Titanic")
getwd()
dr()
dir()
source("ReadDataFunc.R")
ls()
source("processdata.R")
source("processdata.R")
source("processdata.R")
source("ReadDataFunc.R")
ls()
df.train$Title<-getTitle(df.train)
unique(df.train$Title)
df.train$Title
df.train$Title<-getTitle(df.train)
source("ReadDataFunc.R")
df.train$Title<-getTitle(df.train)
unique(df.train$Title)
source("ReadDataFunc.R")
df.train$Title<-getTitle(df.train)
unique(df.train$Title)
dir()
source("titleAnalyze.R")
source("titleAnalyze.R")
source("titleAnalyze.R")
unique(df.train$Title)
source("titleAnalyze.R")
source("titleAnalyze.R")
options(digits=2)
require(Hmisc)
bystats(df.train$Age,df.train$Title,
fun=function(x)c(Mean=mean(x),Median=median(x)))
dir()
source("ReadDataFunc.R")
ls()
df.train$Age[which(df.train$Title=="Dr")]
source("titleAnalyze.R")
ls()
titles.na.train
titles.na.train<-c("Dr","Master","Mrs","Miss","Mr")
titles.na.train
source("ReadDataFunc.R")
ls()
source("titleAnalyze.R")
titles.na.train
titles.na.train
source("titleAnalyze.R")
source("ReadDataFunc.R")
source("titleAnalyze.R")
df.train$Age[which(df.train$Title=="Dr")]
summary(df.train$Age)
summary(df.train$Embarked)
df.train$Embarked[which(is.na(df.train$Embarked))]<-'S'
summary(df.train$Embarked)
summary(df.train$Fare)
subset(df.train, Fare < 7)[order(subset(df.train, Fare < 7)$Fare, 
                          subset(df.train, Fare < 7)$Pclass), 
                          c("Age", "Title", "Pclass", "Fare")]
df.train$Fare[ which( df.train$Fare == 0 )] <- NA
df.train$Fare <- imputeMedian(df.train$Fare, df.train$Pclass, 
                              as.numeric(levels(df.train$Pclass)))
source("fareanal.R")
source("ReadDataFunc.R")
ls()
source("changtit.R")
source("changtit.R")
source("changtit.R")
source("fitEng.R")
ls()
df.train<-featureEngrg(df.train)
df.train<-featureEngrg(df.train)
df.train<-featureEngrg(df.train)
source("fitEng.R")
q()
